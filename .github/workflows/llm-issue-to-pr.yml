name: LLM-Powered Issue to PR

on:
  issues:
    types: [opened]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  analyze-and-fix:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'

      - name: Install dependencies
        run: npm install

      - name: Setup Python for LLM integration
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          pip install requests openai anthropic

      - name: Create adrian branch if it doesn't exist
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Check if adrian branch exists locally or remotely
          if ! git show-ref --quiet refs/heads/adrian && ! git ls-remote --exit-code origin adrian; then
            echo "Creating new adrian branch"
            git checkout -b adrian
            git push origin adrian
          else
            echo "Adrian branch exists, checking out"
            git fetch origin
            if git show-ref --quiet refs/remotes/origin/adrian; then
              git checkout -b adrian origin/adrian || git checkout adrian
            else
              git checkout -b adrian
            fi
          fi

      - name: Analyze issue and generate fix
        id: analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          WARP_API_KEY: ${{ secrets.WARP_API_KEY }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          python .github/scripts/analyze_and_fix.py

      - name: Check if changes were made
        id: check_changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected"
            git status
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes made"
          fi

      - name: Build and test changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          echo "Testing the proposed changes..."
          npm run build
          
          # Basic validation that the site builds successfully
          if [ ! -d "public" ]; then
            echo "Build failed - public directory not created"
            exit 1
          fi
          
          echo "Build successful"

      - name: Commit and create PR
        if: steps.check_changes.outputs.changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          # Create a unique branch name for this fix
          BRANCH_NAME="llm-fix-issue-${{ github.event.issue.number }}-$(date +%s)"
          
          git checkout -b "$BRANCH_NAME"
          git add .
          git commit -m "ü§ñ Automated fix for issue #${{ github.event.issue.number }}

          This is an automated fix generated by LLM analysis of issue #${{ github.event.issue.number }}.
          
          Issue: ${{ github.event.issue.title }}
          
          Please review the changes carefully before merging."
          
          git push origin "$BRANCH_NAME"
          
          # Create PR using GitHub CLI
          gh pr create \
            --base adrian \
            --head "$BRANCH_NAME" \
            --title "ü§ñ Automated fix for issue #${{ github.event.issue.number }}" \
            --body "This PR contains an automated fix for issue #${{ github.event.issue.number }}.

          **Original Issue:** ${{ github.event.issue.title }}

          **Changes Made:**
          $(python .github/scripts/summarize_changes.py)

          **‚ö†Ô∏è Important Notes:**
          - This is an automated fix generated by AI
          - Please review all changes carefully before merging
          - Test the changes locally to ensure they work as expected
          - The PR targets the \`adrian\` branch as requested

          **Testing:**
          The automated build passed successfully, but manual testing is recommended.

          Closes #${{ github.event.issue.number }}"

      - name: Comment on issue
        if: steps.check_changes.outputs.changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue comment ${{ github.event.issue.number }} --body "ü§ñ **Automated Fix Generated**

          I've analyzed this issue and created a potential fix. You can find the proposed changes in the pull request that should appear shortly.

          **Next Steps:**
          1. Review the automatically created PR
          2. Test the changes locally if needed  
          3. Merge to the \`adrian\` branch if the fix looks good

          **Note:** This is an AI-generated solution. Please review carefully before merging."

      - name: Comment on issue if no fix possible
        if: steps.check_changes.outputs.changes == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue comment ${{ github.event.issue.number }} --body "ü§ñ **Analysis Complete**

          I've analyzed this issue but wasn't able to generate an automated code fix. This might be because:

          - The issue requires human judgment or design decisions
          - The issue is not clearly describing a code problem
          - The fix would require significant architectural changes
          - Additional information or clarification is needed

          Please consider manual review and implementation for this issue."
